{"version":3,"file":"render.js","sources":["../../src/render.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {DomPartsTemplate, DomPartsTemplateInstance, ManualTemplate, ManualTemplateInstance, Template, domPartsTemplateCache, manualTemplateCache} from './template.js';\nimport {TemplateResult} from './ttl.js';\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n\n  /**\n   * Whether to use DOM parts for rendering. Defaults to `true` if DOM parts are\n   * supported in the current browser, otherwise `false`.\n   */\n  useDomParts: boolean;\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: TemplateResult,\n  _container: HTMLElement | DocumentFragment,\n  options: RenderOptions\n) => {\n  const templateCache = options.useDomParts\n    ? domPartsTemplateCache\n    : manualTemplateCache;\n  let template = templateCache.get(value.strings);\n  if (template === undefined) {\n    const Template = options.useDomParts\n      ? DomPartsTemplate\n      : ManualTemplate;\n    templateCache.set(value.strings, (template = new Template(value)));\n  }\n\n  const TemplateInstance = options?.useDomParts\n    ? DomPartsTemplateInstance\n    : ManualTemplateInstance;\n  const instance = new TemplateInstance(template as Template);\n  instance._clone(options);\n};\n"],"names":["render","value","_container","options","templateCache","useDomParts","domPartsTemplateCache","manualTemplateCache","template","get","strings","undefined","Template","DomPartsTemplate","ManualTemplate","set","DomPartsTemplateInstance","ManualTemplateInstance","_clone"],"mappings":";;;;;GA2Ea,MAAAA,EAAS,CACpBC,EACAC,EACAC,KAEA,MAAMC,EAAgBD,EAAQE,YAC1BC,EACAC,EACJ,IAAIC,EAAWJ,EAAcK,IAAIR,EAAMS,SACvC,QAAiBC,IAAbH,EAAwB,CAC1B,MAAMI,EAAWT,EAAQE,YACrBQ,EACAC,EACJV,EAAcW,IAAId,EAAMS,QAAUF,EAAW,IAAII,EAASX,GAC3D,CAKgB,IAHQE,GAASE,YAC9BW,EACAC,GACkCT,GAC7BU,EAAOf,EAAQ"}