{"version":3,"file":"template-content_test.js","sourceRoot":"","sources":["../../../src/test/directives/template-content_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,eAAe,EAAC,MAAM,sCAAsC,CAAC;AACrE,OAAO,EAAC,MAAM,EAAE,IAAI,EAAC,MAAM,gBAAgB,CAAC;AAC5C,OAAO,EAAC,MAAM,EAAC,MAAM,kBAAkB,CAAC;AACxC,OAAO,EAAC,WAAW,EAAC,MAAM,gCAAgC,CAAC;AAE3D,KAAK,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC5B,IAAI,SAAsB,CAAC;IAC3B,MAAM,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IACpD,QAAQ,CAAC,SAAS,GAAG,gBAAgB,CAAC;IAEtC,KAAK,CAAC,GAAG,EAAE;QACT,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,MAAM,EAAC,aAAa,EAAC,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;IAErD,IAAI,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAC9B,MAAM,CAAC,IAAI,CAAA,QAAQ,eAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACjE,aAAa,CAAC,2BAA2B,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACvC,MAAM,EAAE,GAAG,GAAG,EAAE,CACd,MAAM,CAAC,IAAI,CAAA,QAAQ,eAAe,CAAC,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACnE,EAAE,EAAE,CAAC;QACL,aAAa,CAAC,2BAA2B,CAAC,CAAC;QAC3C,MAAM,WAAW,GAAG,SAAS,CAAC,aAAa,CAAC,WAAW,CAAmB,CAAC;QAE3E,EAAE,EAAE,CAAC;QACL,MAAM,YAAY,GAAG,SAAS,CAAC,aAAa,CAAC,WAAW,CAAmB,CAAC;QAC5E,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,4CAA4C,EAAE,GAAG,EAAE;QACtD,MAAM,EAAE,GAAG,CAAC,CAAsB,EAAE,EAAE,CACpC,MAAM,CAAC,IAAI,CAAA,QAAQ,eAAe,CAAC,CAAC,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAC5D,EAAE,CAAC,QAAQ,CAAC,CAAC;QACb,aAAa,CAAC,2BAA2B,CAAC,CAAC;QAE3C,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACvD,WAAW,CAAC,SAAS,GAAG,kBAAkB,CAAC;QAC3C,EAAE,CAAC,WAAW,CAAC,CAAC;QAChB,aAAa,CAAC,6BAA6B,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,wDAAwD,EAAE,GAAG,EAAE;QAClE,MAAM,EAAE,GAAG,CAAC,CAAU,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAA,QAAQ,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACpE,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9B,aAAa,CAAC,2BAA2B,CAAC,CAAC;QAE3C,EAAE,CAAC,KAAK,CAAC,CAAC;QACV,aAAa,CAAC,gBAAgB,CAAC,CAAC;QAEhC,EAAE,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC9B,aAAa,CAAC,2BAA2B,CAAC,CAAC;IAC7C,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {templateContent} from '../../directives/template-content.js';\nimport {render, html} from '../../index.js';\nimport {assert} from '@esm-bundle/chai';\nimport {makeAsserts} from '../test-utils/assert-render.js';\n\nsuite('templateContent', () => {\n  let container: HTMLElement;\n  const template = document.createElement('template');\n  template.innerHTML = '<div>aaa</div>';\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  const {assertContent} = makeAsserts(() => container);\n\n  test('renders a template', () => {\n    render(html`<div>${templateContent(template)}</div>`, container);\n    assertContent('<div><div>aaa</div></div>');\n  });\n\n  test('clones a template only once', () => {\n    const go = () =>\n      render(html`<div>${templateContent(template)}</div>`, container);\n    go();\n    assertContent('<div><div>aaa</div></div>');\n    const templateDiv = container.querySelector('div > div') as HTMLDivElement;\n\n    go();\n    const templateDiv2 = container.querySelector('div > div') as HTMLDivElement;\n    assert.equal(templateDiv, templateDiv2);\n  });\n\n  test('renders a new template over a previous one', () => {\n    const go = (t: HTMLTemplateElement) =>\n      render(html`<div>${templateContent(t)}</div>`, container);\n    go(template);\n    assertContent('<div><div>aaa</div></div>');\n\n    const newTemplate = document.createElement('template');\n    newTemplate.innerHTML = '<span>bbb</span>';\n    go(newTemplate);\n    assertContent('<div><span>bbb</span></div>');\n  });\n\n  test('re-renders a template over a non-templateContent value', () => {\n    const go = (v: unknown) => render(html`<div>${v}</div>`, container);\n    go(templateContent(template));\n    assertContent('<div><div>aaa</div></div>');\n\n    go('ccc');\n    assertContent('<div>ccc</div>');\n\n    go(templateContent(template));\n    assertContent('<div><div>aaa</div></div>');\n  });\n});\n"]}