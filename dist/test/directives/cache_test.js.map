{"version":3,"file":"cache_test.js","sourceRoot":"","sources":["../../../src/test/directives/cache_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {render, html, nothing} from '../../index.js';\nimport {cache} from '../../directives/cache.js';\nimport {assert} from '@esm-bundle/chai';\nimport {directive, AsyncDirective} from '../../async-directive.js';\nimport {makeAsserts} from '../test-utils/assert-render.js';\n\nsuite('cache directive', () => {\n  let container: HTMLDivElement;\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  const {assertContent, assertRender} = makeAsserts(() => container);\n\n  test('caches templates', () => {\n    const renderCached = (condition: any, v: string) =>\n      render(\n        html`${cache(\n          condition ? html`<div v=${v}></div>` : html`<span v=${v}></span>`\n        )}`,\n        container\n      );\n\n    renderCached(true, 'A');\n    assertContent('<div v=\"A\"></div>');\n    const element1 = container.querySelector('div');\n\n    renderCached(false, 'B');\n    assertContent('<span v=\"B\"></span>');\n    const element2 = container.querySelector('span');\n\n    assert.notStrictEqual(element1, element2);\n\n    renderCached(true, 'C');\n    assertContent('<div v=\"C\"></div>');\n    assert.strictEqual(container.querySelector('div'), element1);\n\n    renderCached(false, 'D');\n    assertContent('<span v=\"D\"></span>');\n    assert.strictEqual(container.querySelector('span'), element2);\n  });\n\n  test('renders non-TemplateResults', () => {\n    assertRender(html`${cache('abc')}`, 'abc');\n  });\n\n  test('caches templates when switching against non-TemplateResults', () => {\n    const renderCached = (condition: any, v: string) =>\n      render(\n        html`${cache(condition ? html`<div v=${v}></div>` : v)}`,\n        container\n      );\n\n    renderCached(true, 'A');\n    assertContent('<div v=\"A\"></div>');\n    const element1 = container.firstElementChild?.firstElementChild;\n\n    renderCached(false, 'B');\n    assertContent('B');\n\n    renderCached(true, 'C');\n    assertContent('<div v=\"C\"></div>');\n    assert.strictEqual(\n      container.firstElementChild?.firstElementChild,\n      element1\n    );\n\n    renderCached(false, 'D');\n    assertContent('D');\n  });\n\n  test('caches templates when switching against TemplateResult and undefined values', () => {\n    const renderCached = (v: unknown) =>\n      render(html`<div>${cache(v)}</div>`, container);\n\n    renderCached(html`A`);\n    assertContent('<div>A</div>');\n\n    renderCached(undefined);\n    assertContent('<div></div>');\n\n    renderCached(html`B`);\n    assertContent('<div>B</div>');\n  });\n\n  test('cache can be dynamic', () => {\n    const renderMaybeCached = (condition: any, v: string) =>\n      render(\n        html`${condition ? cache(html`<div v=${v}></div>`) : v}`,\n        container\n      );\n\n    renderMaybeCached(true, 'A');\n    assertContent('<div v=\"A\"></div>');\n\n    renderMaybeCached(false, 'B');\n    assertContent('B');\n\n    renderMaybeCached(true, 'C');\n    assertContent('<div v=\"C\"></div>');\n\n    renderMaybeCached(false, 'D');\n    assertContent('D');\n  });\n\n  test('cache can switch between TemplateResult and non-TemplateResult', () => {\n    const renderCache = (bool: boolean) =>\n      render(html`${cache(bool ? html`<p></p>` : nothing)}`, container);\n\n    renderCache(true);\n    assertContent('<p></p>');\n    renderCache(false);\n    assertContent('');\n    renderCache(true);\n    assertContent('<p></p>');\n    renderCache(true);\n    assertContent('<p></p>');\n    renderCache(false);\n    assertContent('');\n    renderCache(true);\n    assertContent('<p></p>');\n    renderCache(false);\n    assertContent('');\n    renderCache(false);\n    assertContent('');\n  });\n\n  test('async directives disconnect/reconnect when moved in/out of cache', () => {\n    const disconnectable = directive(\n      class extends AsyncDirective {\n        log: string[] | undefined;\n        id: string | undefined;\n        render(log: string[], id: string) {\n          this.log = log;\n          this.id = id;\n          this.log.push(`render-${this.id}`);\n          return id;\n        }\n        override disconnected() {\n          this.log!.push(`disconnected-${this.id}`);\n        }\n        override reconnected() {\n          this.log!.push(`reconnected-${this.id}`);\n        }\n      }\n    );\n    const renderCached = (log: string[], condition: boolean) =>\n      render(\n        html`<div>${cache(\n          condition\n            ? html`<div>${disconnectable(log, 'a')}</div>`\n            : html`<span>${disconnectable(log, 'b')}</span>`\n        )}</div>`,\n        container\n      );\n    const log: string[] = [];\n\n    renderCached(log, true);\n    assertContent('<div><div>a</div></div>');\n    assert.deepEqual(log, ['render-a']);\n\n    log.length = 0;\n    renderCached(log, false);\n    assertContent('<div><span>b</span></div>');\n    assert.deepEqual(log, ['disconnected-a', 'render-b']);\n\n    log.length = 0;\n    renderCached(log, true);\n    assertContent('<div><div>a</div></div>');\n    assert.deepEqual(log, ['disconnected-b', 'reconnected-a', 'render-a']);\n\n    log.length = 0;\n    renderCached(log, false);\n    assertContent('<div><span>b</span></div>');\n    assert.deepEqual(log, ['disconnected-a', 'reconnected-b', 'render-b']);\n  });\n});\n"]}