{"version":3,"file":"if-defined_test.js","sourceRoot":"","sources":["../../../src/test/directives/if-defined_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {ifDefined} from '../../directives/if-defined.js';\nimport {render, html} from '../../index.js';\nimport {assert} from '@esm-bundle/chai';\nimport {makeAsserts} from '../test-utils/assert-render.js';\n\nsuite('ifDefined directive', () => {\n  let container: HTMLDivElement;\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  const {assertContent} = makeAsserts(() => container);\n\n  test('sets an attribute with a defined value', () => {\n    render(html`<div foo=\"${ifDefined('a')}\"></div>`, container);\n    assertContent('<div foo=\"a\"></div>');\n  });\n\n  test('removes an attribute with an undefined value', () => {\n    render(html`<div foo=\"${ifDefined(undefined)}\"></div>`, container);\n    assertContent('<div></div>');\n  });\n\n  test('sets an attribute with a previously undefined value', () => {\n    render(html`<div foo=\"${ifDefined(undefined)}\"></div>`, container);\n    render(html`<div foo=\"${ifDefined('a')}\"></div>`, container);\n    assertContent('<div foo=\"a\"></div>');\n  });\n\n  test('removes an attribute with previously defined value', () => {\n    render(html`<div foo=\"${ifDefined('a')}\"></div>`, container);\n    render(html`<div foo=\"${ifDefined(undefined)}\"></div>`, container);\n    assertContent('<div></div>');\n  });\n\n  test('removes an attribute with previous value set outside ifDefined', () => {\n    const go = (v: unknown) => render(html`<div foo=\"${v}\"></div>`, container);\n    go('a');\n    go(ifDefined(undefined));\n    assertContent('<div></div>');\n  });\n\n  test('passes a defined value to a ChildPart', () => {\n    render(html`<div>${ifDefined('a')}</div>`, container);\n    assertContent('<div>a</div>');\n  });\n\n  test('passes an undefined value to a ChildPart', () => {\n    render(html`<div>${ifDefined(undefined)}</div>`, container);\n    assertContent('<div></div>');\n  });\n\n  test('removes an attribute with an interpolated undefined value', () => {\n    render(html`<div foo=\"it's: ${ifDefined(undefined)}\"></div>`, container);\n    assertContent('<div></div>');\n  });\n\n  test('removes an attribute with multiple undefined values', () => {\n    render(\n      html`<div\n        foo=\"they're both: ${ifDefined(undefined)}${ifDefined(undefined)}\"\n      ></div>`,\n      container\n    );\n    assertContent('<div></div>');\n  });\n\n  test('removes an attribute with one defined then one undefined value', () => {\n    render(\n      html`<div\n        foo=\"only one is: ${ifDefined('a')}${ifDefined(undefined)}\"\n      ></div>`,\n      container\n    );\n    assertContent('<div></div>');\n  });\n\n  test('removes an attribute with one undefined then one defined value', () => {\n    render(\n      html`<div\n        foo=\"only one is: ${ifDefined(undefined)}${ifDefined('a')}\"\n      ></div>`,\n      container\n    );\n    assertContent('<div></div>');\n  });\n\n  test('only sets the attribute when the value changed', async () => {\n    let setCount = 0;\n    const observer = new MutationObserver((records) => {\n      setCount += records.length;\n    });\n    const go = (value: string) =>\n      render(html`<div foo=\"1${ifDefined(value)}\"></div>`, container);\n\n    go('a');\n    const el = container.firstElementChild!;\n    observer.observe(el, {attributes: true});\n\n    assertContent('<div foo=\"1a\"></div>');\n    assert.equal(setCount, 0);\n\n    go('a');\n    await new Promise((resolve) => setTimeout(resolve, 0));\n    assertContent('<div foo=\"1a\"></div>');\n    assert.equal(setCount, 0);\n  });\n\n  test('only removes the attribute when the value changed', () => {\n    let removeCount = 0;\n    const go = (value: unknown) =>\n      render(html`<div foo=\"1${ifDefined(value)}\"></div>`, container);\n\n    go('a');\n    const el = container.querySelector('div')!;\n    const origRemoveAttribute = el.removeAttribute.bind(el);\n    el.removeAttribute = (name: string) => {\n      removeCount++;\n      origRemoveAttribute(name);\n    };\n    assertContent('<div foo=\"1a\"></div>');\n    assert.equal(removeCount, 0);\n\n    go(undefined);\n    assertContent('<div></div>');\n    assert.equal(removeCount, 1, 'A');\n\n    go(undefined);\n    assertContent('<div></div>');\n    assert.equal(removeCount, 1, 'B');\n  });\n\n  test('only sets node text value changed', async () => {\n    let setCount = 0;\n    const observer = new MutationObserver((records) => {\n      setCount += records.length;\n    });\n    const go = (value: string) =>\n      render(html`<div>${ifDefined(value)}</div>`, container);\n\n    go('a');\n    const el = container.firstElementChild!;\n    observer.observe(el, {characterData: true});\n\n    assertContent('<div>a</div>');\n    assert.equal(setCount, 0);\n\n    go('a');\n    await new Promise((resolve) => setTimeout(resolve, 0));\n    assertContent('<div>a</div>');\n    assert.equal(setCount, 0);\n  });\n});\n"]}