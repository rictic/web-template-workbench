{"version":3,"file":"guard_test.js","sourceRoot":"","sources":["../../../src/test/directives/guard_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing, html, render} from '../../index.js';\nimport {guard} from '../../directives/guard.js';\nimport {Directive, directive, PartInfo} from '../../directive.js';\nimport {assert} from '@esm-bundle/chai';\nimport {makeAsserts} from '../test-utils/assert-render.js';\n\nsuite('guard', () => {\n  let container: HTMLDivElement;\n\n  function renderGuarded(value: any, f: () => any) {\n    render(html`<div>${guard(value, f)}</div>`, container);\n  }\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  const {assertContent} = makeAsserts(() => container);\n\n  test('re-renders only on identity changes', () => {\n    let callCount = 0;\n    let renderCount = 0;\n\n    const guardedTemplate = () => {\n      callCount += 1;\n      return html`Template ${renderCount}`;\n    };\n\n    renderCount += 1;\n    renderGuarded('foo', guardedTemplate);\n    assertContent('<div>Template 1</div>');\n\n    renderCount += 1;\n    renderGuarded('foo', guardedTemplate);\n    assertContent('<div>Template 1</div>');\n\n    renderCount += 1;\n    renderGuarded('bar', guardedTemplate);\n    assertContent('<div>Template 3</div>');\n\n    assert.equal(callCount, 2);\n  });\n\n  test('renders with undefined the first time', () => {\n    let callCount = 0;\n    let renderCount = 0;\n\n    const guardedTemplate = () => {\n      callCount += 1;\n      return html`${renderCount}`;\n    };\n\n    renderCount += 1;\n    renderGuarded(undefined, guardedTemplate);\n    assertContent('<div>1</div>');\n\n    renderCount += 1;\n    renderGuarded(undefined, guardedTemplate);\n    assertContent('<div>1</div>');\n\n    assert.equal(callCount, 1);\n  });\n\n  test('renders with nothing the first time', () => {\n    let callCount = 0;\n    let renderCount = 0;\n\n    const guardedTemplate = () => {\n      callCount += 1;\n      return html`${renderCount}`;\n    };\n\n    renderCount += 1;\n    renderGuarded(nothing, guardedTemplate);\n    assertContent('<div>1</div>');\n\n    renderCount += 1;\n    renderGuarded(nothing, guardedTemplate);\n    assertContent('<div>1</div>');\n\n    assert.equal(callCount, 1);\n  });\n\n  test('dirty checks array values', () => {\n    let callCount = 0;\n    let items = ['foo', 'bar'];\n\n    const guardedTemplate = () => {\n      callCount += 1;\n      return html`<ul>${items.map((i) => html`<li>${i}</li>`)}</ul>`;\n    };\n\n    renderGuarded([items], guardedTemplate);\n    assertContent('<div><ul><li>foo</li><li>bar</li></ul></div>');\n\n    items.push('baz');\n    renderGuarded([items], guardedTemplate);\n    assertContent('<div><ul><li>foo</li><li>bar</li></ul></div>');\n\n    items = [...items];\n    renderGuarded([items], guardedTemplate);\n    assertContent('<div><ul><li>foo</li><li>bar</li><li>baz</li></ul></div>');\n\n    assert.equal(callCount, 2);\n  });\n\n  test('dirty checks arrays of values', () => {\n    let callCount = 0;\n    const items = ['foo', 'bar'];\n\n    const guardedTemplate = () => {\n      callCount += 1;\n      return html`<ul>${items.map((i) => html`<li>${i}</li>`)}</ul>`;\n    };\n\n    renderGuarded(items, guardedTemplate);\n    assertContent('<div><ul><li>foo</li><li>bar</li></ul></div>');\n\n    renderGuarded(['foo', 'bar'], guardedTemplate);\n    assertContent('<div><ul><li>foo</li><li>bar</li></ul></div>');\n\n    items.push('baz');\n    renderGuarded(items, guardedTemplate);\n    assertContent('<div><ul><li>foo</li><li>bar</li><li>baz</li></ul></div>');\n\n    assert.equal(callCount, 2);\n  });\n\n  test('guards directive from running', () => {\n    let directiveRenderCount = 0;\n    let directiveConstructedCount = 0;\n    let renderCount = 0;\n\n    class MyDirective extends Directive {\n      constructor(partInfo: PartInfo) {\n        super(partInfo);\n        directiveConstructedCount++;\n      }\n      render() {\n        directiveRenderCount++;\n        return directiveRenderCount;\n      }\n    }\n    const testDirective = directive(MyDirective);\n\n    const guardedTemplate = () => {\n      renderCount += 1;\n      return testDirective();\n    };\n\n    renderGuarded('foo', guardedTemplate);\n    assertContent('<div>1</div>');\n\n    renderGuarded('foo', guardedTemplate);\n    assertContent('<div>1</div>');\n\n    renderGuarded('bar', guardedTemplate);\n    assertContent('<div>2</div>');\n\n    assert.equal(renderCount, 2);\n    assert.equal(directiveConstructedCount, 1);\n  });\n});\n"]}