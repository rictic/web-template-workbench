{"version":3,"file":"choose_test.js","sourceRoot":"","sources":["../../../src/test/directives/choose_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,OAAO,EAAC,MAAM,EAAC,MAAM,4BAA4B,CAAC;AAClD,OAAO,EAAC,MAAM,EAAC,MAAM,kBAAkB,CAAC;AAExC,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE;IACnB,IAAI,CAAC,UAAU,EAAE,GAAG,EAAE;QACpB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,SAAS,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC1B,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;QACrD,MAAM,CAAC,WAAW,CAChB,MAAM,CAAC,CAAC,EAAE;YACR,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;YACd,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;SACf,CAAC,EACF,GAAG,CACJ,CAAC;QAEF,MAAM,CAAC,GAAG,EAAE,CAAC;QACb,MAAM,CAAC,GAAG,EAAE,CAAC;QACb,MAAM,CAAC,WAAW,CAChB,MAAM,CAAC,CAAC,EAAE;YACR,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;YACd,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;SACf,CAAC,EACF,GAAG,CACJ,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,cAAc,EAAE,GAAG,EAAE;QACxB,MAAM,CAAC,WAAW,CAChB,MAAM,CACJ,CAAC,EACD;YACE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;YACd,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC;SACf,EACD,GAAG,EAAE,CAAC,GAAG,CACV,EACD,GAAG,CACJ,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {choose} from '../../directives/choose.js';\nimport {assert} from '@esm-bundle/chai';\n\nsuite('choose', () => {\n  test('no cases', () => {\n    assert.strictEqual(choose(1, []), undefined);\n  });\n\n  test('matching cases', () => {\n    assert.strictEqual(choose(1, [[1, () => 'A']]), 'A');\n    assert.strictEqual(\n      choose(2, [\n        [1, () => 'A'],\n        [2, () => 'B'],\n      ]),\n      'B'\n    );\n\n    const a = {};\n    const b = {};\n    assert.strictEqual(\n      choose(b, [\n        [a, () => 'A'],\n        [b, () => 'B'],\n      ]),\n      'B'\n    );\n  });\n\n  test('default case', () => {\n    assert.strictEqual(\n      choose(\n        3,\n        [\n          [1, () => 'A'],\n          [2, () => 'B'],\n        ],\n        () => 'C'\n      ),\n      'C'\n    );\n  });\n});\n"]}