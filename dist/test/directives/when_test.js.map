{"version":3,"file":"when_test.js","sourceRoot":"","sources":["../../../src/test/directives/when_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,OAAO,EAAC,IAAI,EAAC,MAAM,gBAAgB,CAAC;AACpC,OAAO,EAAC,WAAW,EAAC,MAAM,gCAAgC,CAAC;AAE3D,OAAO,EAAC,IAAI,EAAC,MAAM,0BAA0B,CAAC;AAE9C,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE;IACjB,IAAI,SAAyB,CAAC;IAE9B,MAAM,EAAC,YAAY,EAAC,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;IAEpD,KAAK,CAAC,GAAG,EAAE;QACT,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,gCAAgC,EAAE,GAAG,EAAE;QAC1C,YAAY,CACV,IAAI,CACF,IAAI,EACJ,GAAG,EAAE,CAAC,IAAI,CAAA,GAAG,EACb,GAAG,EAAE,CAAC,IAAI,CAAA,GAAG,CACd,EACD,GAAG,CACJ,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC7C,YAAY,CACV,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA,GAAG,CAAC,EACzB,GAAG,CACJ,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;QAC3C,YAAY,CACV,IAAI,CACF,KAAK,EACL,GAAG,EAAE,CAAC,IAAI,CAAA,GAAG,EACb,GAAG,EAAE,CAAC,IAAI,CAAA,GAAG,CACd,EACD,GAAG,CACJ,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAC9C,YAAY,CACV,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,IAAI,CAAA,GAAG,CAAC,EAC1B,EAAE,CACH,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\nimport {html} from '../../index.js';\nimport {makeAsserts} from '../test-utils/assert-render.js';\n\nimport {when} from '../../directives/when.js';\n\nsuite('when', () => {\n  let container: HTMLDivElement;\n\n  const {assertRender} = makeAsserts(() => container);\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  test('true condition with false case', () => {\n    assertRender(\n      when(\n        true,\n        () => html`X`,\n        () => html`Y`\n      ),\n      'X'\n    );\n  });\n\n  test('true condition without false case', () => {\n    assertRender(\n      when(true, () => html`X`),\n      'X'\n    );\n  });\n\n  test('false condition with false case', () => {\n    assertRender(\n      when(\n        false,\n        () => html`X`,\n        () => html`Y`\n      ),\n      'Y'\n    );\n  });\n\n  test('false condition without false case', () => {\n    assertRender(\n      when(false, () => html`X`),\n      ''\n    );\n  });\n});\n"]}