{"version":3,"file":"class-map_test.js","sourceRoot":"","sources":["../../../src/test/directives/class-map_test.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {html, svg, render} from '../../index.js';\nimport {ClassInfo, classMap} from '../../directives/class-map.js';\nimport {assert} from '@esm-bundle/chai';\n\nsuite('classMap directive', () => {\n  let container: HTMLDivElement;\n\n  function renderClassMap(cssInfo: ClassInfo) {\n    render(html`<div class=\"${classMap(cssInfo)}\"></div>`, container);\n  }\n\n  function renderClassMapStatic(cssInfo: ClassInfo) {\n    render(html`<div class=\"aa ${classMap(cssInfo)} bb\"></div>`, container);\n  }\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  test('adds classes', () => {\n    renderClassMap({foo: 0, bar: true, zonk: true});\n    const el = container.firstElementChild!;\n    assert.isFalse(el.classList.contains('foo'));\n    assert.isTrue(el.classList.contains('bar'));\n    assert.isTrue(el.classList.contains('zonk'));\n  });\n\n  test('removes classes', () => {\n    renderClassMap({foo: true, bar: true, baz: true});\n    const el = container.firstElementChild!;\n    assert.isTrue(el.classList.contains('foo'));\n    assert.isTrue(el.classList.contains('bar'));\n    assert.isTrue(el.classList.contains('baz'));\n    renderClassMap({foo: false, bar: true, baz: false});\n    assert.isFalse(el.classList.contains('foo'));\n    assert.isTrue(el.classList.contains('bar'));\n    assert.isFalse(el.classList.contains('baz'));\n  });\n\n  test('removes omitted classes', () => {\n    renderClassMap({foo: true, bar: true, baz: true});\n    const el = container.firstElementChild!;\n    assert.isTrue(el.classList.contains('foo'));\n    assert.isTrue(el.classList.contains('bar'));\n    assert.isTrue(el.classList.contains('baz'));\n    renderClassMap({});\n    assert.isFalse(el.classList.contains('foo'));\n    assert.isFalse(el.classList.contains('bar'));\n    assert.isFalse(el.classList.contains('baz'));\n    assert.equal(el.classList.length, 0);\n  });\n\n  test('works with static classes', () => {\n    renderClassMapStatic({foo: true});\n    const el = container.firstElementChild!;\n    assert.isTrue(el.classList.contains('aa'), 'aa 1');\n    assert.isTrue(el.classList.contains('bb'), 'bb 1');\n    assert.isTrue(el.classList.contains('foo'), 'foo 1');\n    renderClassMapStatic({});\n    assert.isTrue(el.classList.contains('aa'), 'aa');\n    assert.isTrue(el.classList.contains('bb'), 'bb');\n    assert.isFalse(el.classList.contains('foo'), 'foo');\n  });\n\n  test('works with imperatively added classes', () => {\n    renderClassMap({foo: true});\n    const el = container.firstElementChild!;\n    assert.isTrue(el.classList.contains('foo'));\n\n    el.classList.add('bar');\n    assert.isTrue(el.classList.contains('bar'));\n\n    renderClassMap({foo: false});\n    assert.isFalse(el.classList.contains('foo'));\n    assert.isTrue(el.classList.contains('bar'));\n  });\n\n  test('can not override static classes', () => {\n    renderClassMapStatic({aa: false, bb: true});\n    const el = container.firstElementChild!;\n    assert.isTrue(el.classList.contains('aa'));\n    assert.isTrue(el.classList.contains('bb'));\n\n    // bb is explicitly set to false\n    renderClassMapStatic({aa: true, bb: false});\n    assert.isTrue(el.classList.contains('aa'));\n    assert.isTrue(el.classList.contains('bb'));\n\n    // both are now omitted\n    renderClassMapStatic({});\n    assert.isTrue(el.classList.contains('aa'));\n    assert.isTrue(el.classList.contains('bb'));\n  });\n\n  test('changes classes when used with the same object', () => {\n    const classInfo = {foo: true};\n    renderClassMapStatic(classInfo);\n    const el = container.firstElementChild!;\n    assert.isTrue(el.classList.contains('aa'));\n    assert.isTrue(el.classList.contains('bb'));\n    assert.isTrue(el.classList.contains('foo'));\n    classInfo.foo = false;\n    renderClassMapStatic(classInfo);\n    assert.isTrue(el.classList.contains('aa'));\n    assert.isTrue(el.classList.contains('bb'));\n    assert.isFalse(el.classList.contains('foo'));\n  });\n\n  test('adds classes on SVG elements', () => {\n    const cssInfo = {foo: 0, bar: true, zonk: true};\n    render(svg`<circle class=\"${classMap(cssInfo)}\"></circle>`, container);\n    const el = container.firstElementChild!;\n    const classes = el.getAttribute('class')!.split(' ');\n    // Sigh, IE.\n    assert.isTrue(classes.indexOf('foo') === -1);\n    assert.isTrue(classes.indexOf('bar') > -1);\n    assert.isTrue(classes.indexOf('zonk') > -1);\n  });\n\n  test('works if there are no spaces next to directive', () => {\n    render(html`<div class=\"aa${classMap({bb: true})}cc\"></div>`, container);\n    const el = container.firstElementChild!;\n    assert.isTrue(el.classList.contains('aa'));\n    assert.isTrue(el.classList.contains('bb'));\n    assert.isTrue(el.classList.contains('cc'));\n  });\n\n  test('throws when used on non-class attribute', () => {\n    assert.throws(() => {\n      render(html`<div id=\"${classMap({})}\"></div>`, container);\n    });\n  });\n\n  test('throws when used in attribute with more than 1 part', () => {\n    assert.throws(() => {\n      render(html`<div class=\"${'hi'} ${classMap({})}\"></div>`, container);\n    });\n  });\n\n  test('throws when used in ChildPart', () => {\n    assert.throws(() => {\n      render(html`<div>${classMap({})}</div>`, container);\n    });\n  });\n});\n"]}