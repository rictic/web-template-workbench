{"version":3,"file":"keyed_test.js","sourceRoot":"","sources":["../../../src/test/directives/keyed_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,KAAK,EAAC,MAAM,2BAA2B,CAAC;AAChD,OAAO,EAAC,MAAM,EAAE,IAAI,EAAC,MAAM,gBAAgB,CAAC;AAC5C,OAAO,EAAC,MAAM,EAAC,MAAM,kBAAkB,CAAC;AACxC,OAAO,EAAC,WAAW,EAAC,MAAM,gCAAgC,CAAC;AAE3D,KAAK,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC5B,IAAI,SAAyB,CAAC;IAE9B,KAAK,CAAC,GAAG,EAAE;QACT,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5C,CAAC,CAAC,CAAC;IAEH,MAAM,EAAC,aAAa,EAAC,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,CAAC;IAErD,IAAI,CAAC,iCAAiC,EAAE,GAAG,EAAE;QAC3C,MAAM,EAAE,GAAG,CAAC,CAAM,EAAE,EAAE,CACpB,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAA,aAAa,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;QAE3D,iBAAiB;QACjB,EAAE,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,GAAG,GAAG,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC3C,aAAa,CAAC,aAAa,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAE,GAAW,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAElC,iDAAiD;QACjD,EAAE,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,IAAI,GAAG,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,aAAa,CAAC,aAAa,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAE,IAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAE9B,4DAA4D;QAC5D,EAAE,CAAC,CAAC,CAAC,CAAC;QACN,MAAM,IAAI,GAAG,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,aAAa,CAAC,aAAa,CAAC,CAAC;QAC7B,MAAM,CAAC,KAAK,CAAE,IAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACnC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {keyed} from '../../directives/keyed.js';\nimport {render, html} from '../../index.js';\nimport {assert} from '@esm-bundle/chai';\nimport {makeAsserts} from '../test-utils/assert-render.js';\n\nsuite('keyed directive', () => {\n  let container: HTMLDivElement;\n\n  setup(() => {\n    container = document.createElement('div');\n  });\n\n  const {assertContent} = makeAsserts(() => container);\n\n  test('re-renders when the key changes', () => {\n    const go = (k: any) =>\n      render(keyed(k, html`<div .foo=${k}></div>`), container);\n\n    // Initial render\n    go(1);\n    const div = container.querySelector('div');\n    assertContent('<div></div>');\n    assert.equal((div as any).foo, 1);\n\n    // Rerendering with same key should reuse the DOM\n    go(1);\n    const div2 = container.querySelector('div');\n    assertContent('<div></div>');\n    assert.equal((div2 as any).foo, 1);\n    assert.strictEqual(div, div2);\n\n    // Rerendering with a different key should not reuse the DOM\n    go(2);\n    const div3 = container.querySelector('div');\n    assertContent('<div></div>');\n    assert.equal((div3 as any).foo, 2);\n    assert.notStrictEqual(div, div3);\n  });\n});\n"]}